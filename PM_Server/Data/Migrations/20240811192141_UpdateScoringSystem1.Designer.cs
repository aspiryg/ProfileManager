// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PM_Server.Data;

#nullable disable

namespace PM_Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240811192141_UpdateScoringSystem1")]
    partial class UpdateScoringSystem1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PM_DataAccess.GeneInfo.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NationalityCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NationalityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5702),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5699),
                            NationalityCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            NationalityName = "Afghan"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5707),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5705),
                            NationalityCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            NationalityName = "Syrian"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5711),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5710),
                            NationalityCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            NationalityName = "Palestinian"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5716),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5714),
                            NationalityCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            NationalityName = "Lebanese"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5721),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5719),
                            NationalityCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            NationalityName = "Egyptian"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5725),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5724),
                            NationalityCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            NationalityName = "Iraqi"
                        });
                });

            modelBuilder.Entity("PM_DataAccess.GeneInfo.Surgery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SurgeryCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SurgeryCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SurgeryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurgeryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurgeryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Surgeries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5765),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5762),
                            SurgeryCategory = "",
                            SurgeryCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            SurgeryDescription = "",
                            SurgeryName = "Surgery 1",
                            SurgeryType = ""
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5772),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5769),
                            SurgeryCategory = "",
                            SurgeryCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            SurgeryDescription = "",
                            SurgeryName = "Surgery 2",
                            SurgeryType = ""
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5778),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5776),
                            SurgeryCategory = "",
                            SurgeryCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            SurgeryDescription = "",
                            SurgeryName = "Surgery 3",
                            SurgeryType = ""
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5782),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5781),
                            SurgeryCategory = "",
                            SurgeryCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            SurgeryDescription = "",
                            SurgeryName = "Surgery 4",
                            SurgeryType = ""
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5787),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5785),
                            SurgeryCategory = "",
                            SurgeryCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            SurgeryDescription = "",
                            SurgeryName = "Surgery 5",
                            SurgeryType = ""
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5792),
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5790),
                            SurgeryCategory = "",
                            SurgeryCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            SurgeryDescription = "",
                            SurgeryName = "Surgery 6",
                            SurgeryType = ""
                        });
                });

            modelBuilder.Entity("PM_DataAccess.PatientClasses.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientID"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferrerID")
                        .HasColumnType("int");

                    b.Property<int?>("SocialWorkerID")
                        .HasColumnType("int");

                    b.Property<int>("StageID")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.HasIndex("ReferrerID");

                    b.HasIndex("SocialWorkerID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PM_DataAccess.Referrer.NGOClass", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("NGOs");
                });

            modelBuilder.Entity("PM_DataAccess.SEA.ScoringSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Oprator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("ScoringSystemCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ScoringSystems");
                });

            modelBuilder.Entity("PM_DataAccess.SEA.SocioeconomicAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AbilityToAffordEssentialNeeds")
                        .HasColumnType("bit");

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisabilityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisabilitySeverity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisabilityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDisability")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHealthInsurance")
                        .HasColumnType("bit");

                    b.Property<string>("HousingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HousingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsurancePolicyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHeadOfHousehold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<bool>("MOSARegistered")
                        .HasColumnType("bit");

                    b.Property<string>("MOSARegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MonthlyIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("NationalityID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFamilyMembers")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OtherRegistered")
                        .HasColumnType("bit");

                    b.Property<string>("OtherRegistrationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<Guid>("SocioeconomicAssessmentCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SurgeryId")
                        .HasColumnType("int");

                    b.Property<bool>("UNCHRRegistered")
                        .HasColumnType("bit");

                    b.Property<string>("UNCHRRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UNRWARegistered")
                        .HasColumnType("bit");

                    b.Property<string>("UNRWARegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkingFamilyMembers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalityID");

                    b.HasIndex("PatientID");

                    b.HasIndex("SurgeryId");

                    b.ToTable("SEAssessments");
                });

            modelBuilder.Entity("PM_DataAccess.StagesClasses.Stage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ActualAssignee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssignedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentStage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNextStage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverdue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientID")
                        .HasColumnType("int");

                    b.Property<int>("Patient_Id")
                        .HasColumnType("int");

                    b.Property<string>("Responsible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageGroupParent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StageIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageNumber")
                        .HasColumnType("int");

                    b.Property<int>("StageOrder")
                        .HasColumnType("int");

                    b.Property<string>("StageStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageStatusID")
                        .HasColumnType("int");

                    b.Property<string>("StageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("PM_DataAccess.StagesClasses.StageStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StageStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Color = "Warning",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5544),
                            Description = "",
                            Icon = "Pending",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5539),
                            Status = "Pending"
                        },
                        new
                        {
                            ID = 2,
                            Color = "Primary",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5551),
                            Description = "",
                            Icon = "InProgress",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5550),
                            Status = "In Progress"
                        },
                        new
                        {
                            ID = 3,
                            Color = "Success",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5557),
                            Description = "",
                            Icon = "Completed",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5555),
                            Status = "Completed"
                        },
                        new
                        {
                            ID = 4,
                            Color = "Danger",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5561),
                            Description = "",
                            Icon = "Cancelled",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5560),
                            Status = "Cancelled"
                        },
                        new
                        {
                            ID = 5,
                            Color = "Danger",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5566),
                            Description = "",
                            Icon = "Rejected",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5565),
                            Status = "Rejected"
                        },
                        new
                        {
                            ID = 6,
                            Color = "Success",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5571),
                            Description = "",
                            Icon = "Approved",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5570),
                            Status = "Approved"
                        },
                        new
                        {
                            ID = 7,
                            Color = "Warning",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5577),
                            Description = "",
                            Icon = "OnHold",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5575),
                            Status = "On Hold"
                        },
                        new
                        {
                            ID = 8,
                            Color = "Warning",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5582),
                            Description = "",
                            Icon = "NotStarted",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5580),
                            Status = "Not Started"
                        },
                        new
                        {
                            ID = 9,
                            Color = "Warning",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5587),
                            Description = "",
                            Icon = "NotApplicable",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5585),
                            Status = "Not Applicable"
                        },
                        new
                        {
                            ID = 10,
                            Color = "Warning",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5592),
                            Description = "",
                            Icon = "NotRequired",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5590),
                            Status = "Not Required"
                        },
                        new
                        {
                            ID = 11,
                            Color = "Warning",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5597),
                            Description = "",
                            Icon = "NotAvailable",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5595),
                            Status = "Not Available"
                        });
                });

            modelBuilder.Entity("PM_DataAccess.StagesClasses.StageTypes", b =>
                {
                    b.Property<int>("StageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageID"));

                    b.Property<string>("AssignedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("DurationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Parent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StageID");

                    b.ToTable("StageTypes");

                    b.HasData(
                        new
                        {
                            StageID = 1,
                            AssignedBy = "",
                            AssignedTo = "",
                            Color = "Green",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5635),
                            Description = "",
                            Duration = 0,
                            DurationType = "",
                            DurationUnit = "Day",
                            Group = "",
                            Icon = "Intake",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5636),
                            Name = "Intake",
                            Order = 1,
                            Parent = "",
                            Responsible = "Referrer"
                        },
                        new
                        {
                            StageID = 2,
                            AssignedBy = "",
                            AssignedTo = "",
                            Color = "Green",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5646),
                            Description = "",
                            Duration = 7,
                            DurationType = "",
                            DurationUnit = "Day",
                            Group = "",
                            Icon = "Assessment",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5647),
                            Name = "SocioEconomic Assessment",
                            Order = 2,
                            Parent = "",
                            Responsible = "Social Worker"
                        },
                        new
                        {
                            StageID = 3,
                            AssignedBy = "",
                            AssignedTo = "",
                            Color = "Green",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5650),
                            Description = "",
                            Duration = 7,
                            DurationType = "",
                            DurationUnit = "Day",
                            Group = "",
                            Icon = "Medical",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5651),
                            Name = "Medical Assessment",
                            Order = 3,
                            Parent = "",
                            Responsible = "Medical Examiner"
                        },
                        new
                        {
                            StageID = 4,
                            AssignedBy = "",
                            AssignedTo = "",
                            Color = "Green",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5654),
                            Description = "",
                            Duration = 7,
                            DurationType = "",
                            DurationUnit = "Day",
                            Group = "",
                            Icon = "Treatment",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5655),
                            Name = "Treatment Plan",
                            Order = 4,
                            Parent = "",
                            Responsible = "HealthCare Service Providers"
                        },
                        new
                        {
                            StageID = 5,
                            AssignedBy = "",
                            AssignedTo = "",
                            Color = "Green",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5658),
                            Description = "",
                            Duration = 7,
                            DurationType = "",
                            DurationUnit = "Day",
                            Group = "",
                            Icon = "Financial",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5659),
                            Name = "Payment Stage",
                            Order = 5,
                            Parent = "",
                            Responsible = "Medi-financial service provider"
                        },
                        new
                        {
                            StageID = 6,
                            AssignedBy = "",
                            AssignedTo = "",
                            Color = "Green",
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5663),
                            Description = "",
                            Duration = 0,
                            DurationType = "",
                            DurationUnit = "Day",
                            Group = "",
                            Icon = "End",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5664),
                            Name = "End the process",
                            Order = 6,
                            Parent = "",
                            Responsible = "Admin"
                        });
                });

            modelBuilder.Entity("PM_DataAccess.UserProfiles.UserProfile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserProfiles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserProfile");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PM_DataAccess.UserProfiles.UserType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5296),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5293),
                            Type = "Referrer"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5302),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5301),
                            Type = "Social Worker"
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5307),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5306),
                            Type = "Medical Examiner"
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5312),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5310),
                            Type = "HealthCare Service Providers"
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5317),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5315),
                            Type = "Financial Supporter"
                        },
                        new
                        {
                            ID = 6,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5322),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5320),
                            Type = "Medical Missions"
                        },
                        new
                        {
                            ID = 7,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5326),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5325),
                            Type = "Medi-financial service provider"
                        },
                        new
                        {
                            ID = 8,
                            CreatedBy = "",
                            CreatedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5331),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsModified = false,
                            ModifiedBy = "",
                            ModifiedDate = new DateTime(2024, 8, 11, 15, 21, 40, 789, DateTimeKind.Local).AddTicks(5329),
                            Type = "Admin"
                        });
                });

            modelBuilder.Entity("PM_Server.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PM_DataAccess.Referrer.Referrer", b =>
                {
                    b.HasBaseType("PM_DataAccess.UserProfiles.UserProfile");

                    b.HasDiscriminator().HasValue("Referrer");
                });

            modelBuilder.Entity("PM_DataAccess.SocialWorker.SocialWorker", b =>
                {
                    b.HasBaseType("PM_DataAccess.UserProfiles.UserProfile");

                    b.HasDiscriminator().HasValue("SocialWorker");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PM_Server.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PM_Server.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_Server.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PM_Server.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PM_DataAccess.PatientClasses.Patient", b =>
                {
                    b.HasOne("PM_DataAccess.Referrer.Referrer", null)
                        .WithMany("Patients")
                        .HasForeignKey("ReferrerID");

                    b.HasOne("PM_DataAccess.SocialWorker.SocialWorker", null)
                        .WithMany("Patients")
                        .HasForeignKey("SocialWorkerID");
                });

            modelBuilder.Entity("PM_DataAccess.SEA.SocioeconomicAssessment", b =>
                {
                    b.HasOne("PM_DataAccess.GeneInfo.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_DataAccess.PatientClasses.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PM_DataAccess.GeneInfo.Surgery", "Surgery")
                        .WithMany()
                        .HasForeignKey("SurgeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nationality");

                    b.Navigation("Patient");

                    b.Navigation("Surgery");
                });

            modelBuilder.Entity("PM_DataAccess.StagesClasses.Stage", b =>
                {
                    b.HasOne("PM_DataAccess.PatientClasses.Patient", null)
                        .WithMany("Stages")
                        .HasForeignKey("PatientID");
                });

            modelBuilder.Entity("PM_DataAccess.PatientClasses.Patient", b =>
                {
                    b.Navigation("Stages");
                });

            modelBuilder.Entity("PM_DataAccess.Referrer.Referrer", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("PM_DataAccess.SocialWorker.SocialWorker", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
